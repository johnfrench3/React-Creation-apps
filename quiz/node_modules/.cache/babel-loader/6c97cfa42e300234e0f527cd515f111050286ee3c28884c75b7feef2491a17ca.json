{"ast":null,"code":"var _jsxFileName = \"I:\\\\Project\\\\quiz\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [questions, setQuestions] = useState([{\n    question: 'What is the capital of France?',\n    options: ['London', 'Berlin', 'Paris', 'Madrid'],\n    correctAnswer: 'Paris'\n  }, {\n    question: 'Which planet is known as the Red Planet?',\n    options: ['Mars', 'Jupiter', 'Earth', 'Venus'],\n    correctAnswer: 'Mars'\n  }]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [userSelections, setUserSelections] = useState(Array(questions.length).fill(''));\n  const [score, setScore] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [timer, setTimer] = useState(30);\n  useEffect(() => {\n    const timerInterval = setInterval(() => {\n      if (timer > 0) {\n        setTimer(timer - 1);\n      } else {\n        moveToNextQuestion();\n        clearInterval(timerInterval);\n      }\n    }, 1000);\n    return () => clearInterval(timerInterval);\n  }, [timer]);\n  const handleOptionChange = event => {\n    const updatedSelections = [...userSelections];\n    updatedSelections[currentQuestion] = event.target.value;\n    setUserSelections(updatedSelections);\n  };\n  const checkAnswer = () => {\n    const selectedAnswer = userSelections[currentQuestion];\n    const currentQuestionData = questions[currentQuestion];\n    if (selectedAnswer === currentQuestionData.correctAnswer) {\n      setScore(score + 1);\n    }\n  };\n  const moveToNextQuestion = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setTimer(30);\n    } else {\n      setQuizCompleted(true);\n    }\n  };\n  const moveToPreviousQuestion = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(currentQuestion - 1);\n      setTimer(30);\n    }\n  };\n  const renderQuiz = () => {\n    if (currentQuestion < questions.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"question-text\",\n          children: questions[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"options-list\",\n          children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"option-item\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"options\",\n                value: option,\n                onChange: handleOptionChange,\n                checked: userSelections[currentQuestion] === option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), option]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: [\"Time Remaining: \", timer, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"check-answer-button\",\n          onClick: checkAnswer,\n          children: \"Check Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: moveToPreviousQuestion,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-button\",\n          onClick: moveToNextQuestion,\n          children: currentQuestion === questions.length - 1 ? 'Finish Quiz' : 'Next Question'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"result-heading\",\n          children: \"Quiz Completed!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"score-text\",\n          children: [\"Your Score: \", score, \" / \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"quiz-title\",\n      children: \"Quiz App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), quizCompleted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: renderQuiz()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz\",\n      children: renderQuiz()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jKimtSYrNYGOE5KhmzAhZQkCkg0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","question","options","correctAnswer","currentQuestion","setCurrentQuestion","userSelections","setUserSelections","Array","length","fill","score","setScore","quizCompleted","setQuizCompleted","timer","setTimer","timerInterval","setInterval","moveToNextQuestion","clearInterval","handleOptionChange","event","updatedSelections","target","value","checkAnswer","selectedAnswer","currentQuestionData","moveToPreviousQuestion","renderQuiz","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","type","name","onChange","checked","onClick","_c","$RefreshReg$"],"sources":["I:/Project/quiz/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [questions, setQuestions] = useState([\n    {\n      question: 'What is the capital of France?',\n      options: ['London', 'Berlin', 'Paris', 'Madrid'],\n      correctAnswer: 'Paris',\n    },\n    {\n      question: 'Which planet is known as the Red Planet?',\n      options: ['Mars', 'Jupiter', 'Earth', 'Venus'],\n      correctAnswer: 'Mars',\n    },\n  ]);\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [userSelections, setUserSelections] = useState(Array(questions.length).fill(''));\n  const [score, setScore] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [timer, setTimer] = useState(30);\n\n  useEffect(() => {\n    const timerInterval = setInterval(() => {\n      if (timer > 0) {\n        setTimer(timer - 1);\n      } else {\n        moveToNextQuestion();\n        clearInterval(timerInterval);\n      }\n    }, 1000);\n\n    return () => clearInterval(timerInterval);\n  }, [timer]);\n\n  const handleOptionChange = (event) => {\n    const updatedSelections = [...userSelections];\n    updatedSelections[currentQuestion] = event.target.value;\n    setUserSelections(updatedSelections);\n  };\n\n  const checkAnswer = () => {\n    const selectedAnswer = userSelections[currentQuestion];\n    const currentQuestionData = questions[currentQuestion];\n\n    if (selectedAnswer === currentQuestionData.correctAnswer) {\n      setScore(score + 1);\n    }\n  };\n\n  const moveToNextQuestion = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setTimer(30);\n    } else {\n      setQuizCompleted(true);\n    }\n  };\n\n  const moveToPreviousQuestion = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(currentQuestion - 1);\n      setTimer(30);\n    }\n  };\n\n  const renderQuiz = () => {\n    if (currentQuestion < questions.length) {\n      return (\n        <div className=\"question-container\">\n          <p className=\"question-text\">{questions[currentQuestion].question}</p>\n          <ul className=\"options-list\">\n            {questions[currentQuestion].options.map((option, index) => (\n              <li key={index} className=\"option-item\">\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"options\"\n                    value={option}\n                    onChange={handleOptionChange}\n                    checked={userSelections[currentQuestion] === option}\n                  />\n                  {option}\n                </label>\n              </li>\n            ))}\n          </ul>\n          <div className=\"timer\">Time Remaining: {timer} seconds</div>\n          <button className=\"check-answer-button\" onClick={checkAnswer}>\n            Check Answer\n          </button>\n          <button className=\"back-button\" onClick={moveToPreviousQuestion}>\n            Back\n          </button>\n          <button className=\"next-button\" onClick={moveToNextQuestion}>\n            {currentQuestion === questions.length - 1 ? 'Finish Quiz' : 'Next Question'}\n          </button>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"result-container\">\n          <h2 className=\"result-heading\">Quiz Completed!</h2>\n          <p className=\"score-text\">\n            Your Score: {score} / {questions.length}\n          </p>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"quiz-title\">Quiz App</h1>\n      {quizCompleted ? (\n        <div className=\"result\">{renderQuiz()}</div>\n      ) : (\n        <div className=\"quiz\">{renderQuiz()}</div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}