{"ast":null,"code":"var _jsxFileName = \"I:\\\\Project\\\\quiz\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [state, setState] = useState({\n    questions: [{\n      question: \"What is the capital of France?\",\n      options: [\"London\", \"Madrid\", \"Paris\", \"Berlin\"],\n      correctAnswer: \"Paris\"\n    }, {\n      question: \"Which planet is known as the Red Planet?\",\n      options: [\"Earth\", \"Mars\", \"Venus\", \"Jupiter\"],\n      correctAnswer: \"Mars\"\n    }\n    // Add more questions here\n    ],\n\n    currentQuestion: 0,\n    userSelections: [],\n    score: 0,\n    quizCompleted: false,\n    timer: 30\n  });\n  const {\n    questions,\n    currentQuestion,\n    userSelections,\n    score,\n    quizCompleted,\n    timer\n  } = state;\n  useEffect(() => {\n    // Your code for setting up the timer\n    // ...\n\n    // Fetch quiz data or perform other setup as needed\n    // ...\n  }, []);\n  const handleOptionClick = selectedOption => {\n    setState(prevState => ({\n      ...prevState,\n      userSelections: [...prevState.userSelections, selectedOption]\n    }));\n  };\n\n  // Implement your checkAnswer and moveToNextQuestion functions\n  // ...\n\n  const renderQuiz = () => {\n    // Your code for rendering the quiz questions and options\n    // ...\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), quizCompleted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Score: \", score, \" / \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : renderQuiz()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QwUckKUBPaLTBlL/EmdYDGvmZMU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","state","setState","questions","question","options","correctAnswer","currentQuestion","userSelections","score","quizCompleted","timer","handleOptionClick","selectedOption","prevState","renderQuiz","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["I:/Project/quiz/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [state, setState] = useState({\n    questions: [\n      {\n        question: \"What is the capital of France?\",\n        options: [\"London\", \"Madrid\", \"Paris\", \"Berlin\"],\n        correctAnswer: \"Paris\",\n      },\n      {\n        question: \"Which planet is known as the Red Planet?\",\n        options: [\"Earth\", \"Mars\", \"Venus\", \"Jupiter\"],\n        correctAnswer: \"Mars\",\n      },\n      // Add more questions here\n    ],\n    currentQuestion: 0,\n    userSelections: [],\n    score: 0,\n    quizCompleted: false,\n    timer: 30,\n  });\n\n  const { questions, currentQuestion, userSelections, score, quizCompleted, timer } = state;\n\n  useEffect(() => {\n    // Your code for setting up the timer\n    // ...\n\n    // Fetch quiz data or perform other setup as needed\n    // ...\n  }, []);\n\n  const handleOptionClick = (selectedOption) => {\n    setState((prevState) => ({\n      ...prevState,\n      userSelections: [...prevState.userSelections, selectedOption],\n    }));\n  };\n\n  // Implement your checkAnswer and moveToNextQuestion functions\n  // ...\n\n  const renderQuiz = () => {\n    // Your code for rendering the quiz questions and options\n    // ...\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Quiz App</h1>\n      {quizCompleted ? (\n        <div className=\"result\">\n          <h2>Quiz Completed!</h2>\n          <p>Your Score: {score} / {questions.length}</p>\n        </div>\n      ) : (\n        renderQuiz()\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC;IACjCQ,SAAS,EAAE,CACT;MACEC,QAAQ,EAAE,gCAAgC;MAC1CC,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC;MAChDC,aAAa,EAAE;IACjB,CAAC,EACD;MACEF,QAAQ,EAAE,0CAA0C;MACpDC,OAAO,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC;MAC9CC,aAAa,EAAE;IACjB;IACA;IAAA,CACD;;IACDC,eAAe,EAAE,CAAC;IAClBC,cAAc,EAAE,EAAE;IAClBC,KAAK,EAAE,CAAC;IACRC,aAAa,EAAE,KAAK;IACpBC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAM;IAAER,SAAS;IAAEI,eAAe;IAAEC,cAAc;IAAEC,KAAK;IAAEC,aAAa;IAAEC;EAAM,CAAC,GAAGV,KAAK;EAEzFL,SAAS,CAAC,MAAM;IACd;IACA;;IAEA;IACA;EAAA,CACD,EAAE,EAAE,CAAC;EAEN,MAAMgB,iBAAiB,GAAIC,cAAc,IAAK;IAC5CX,QAAQ,CAAEY,SAAS,KAAM;MACvB,GAAGA,SAAS;MACZN,cAAc,EAAE,CAAC,GAAGM,SAAS,CAACN,cAAc,EAAEK,cAAc;IAC9D,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA;;EAEA,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvB;IACA;EAAA,CACD;EAED,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MAAAmB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBX,aAAa,gBACZZ,OAAA;MAAKkB,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBnB,OAAA;QAAAmB,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBvB,OAAA;QAAAmB,QAAA,GAAG,cAAY,EAACR,KAAK,EAAC,KAAG,EAACN,SAAS,CAACmB,MAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,GAENN,UAAU,CAAC,CACZ;EAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACrB,EAAA,CA5DQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA8DZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}