{"ast":null,"code":"import _toConsumableArray from\"I:/Project/quiz/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"I:/Project/quiz/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"I:/Project/quiz/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import'./App.css';import quizData from'./quizData';// Import the quiz data from the separate file\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){var _useState=useState({questions:[],currentQuestion:0,userSelections:[],score:0,quizCompleted:false,timer:30}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var questions=state.questions,currentQuestion=state.currentQuestion,userSelections=state.userSelections,score=state.score,quizCompleted=state.quizCompleted,timer=state.timer;useEffect(function(){setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{questions:quizData});});},[]);var handleOptionClick=function handleOptionClick(selectedOption){setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{userSelections:[].concat(_toConsumableArray(prevState.userSelections),[selectedOption])});});};var checkAnswer=function checkAnswer(){var currentQuestionData=questions[currentQuestion];var selectedAnswer=userSelections[currentQuestion];if(selectedAnswer===currentQuestionData.correctAnswer){setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{score:prevState.score+1});});}};var moveToNextQuestion=function moveToNextQuestion(){if(currentQuestion<questions.length-1){setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{currentQuestion:prevState.currentQuestion+1,timer:30,userSelections:[]});});}else{setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{quizCompleted:true});});}};var renderQuiz=function renderQuiz(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"question\",style:{opacity:currentQuestion===questions.length?0:1},children:/*#__PURE__*/_jsx(\"p\",{children:questions[currentQuestion].question})}),/*#__PURE__*/_jsx(\"div\",{className:\"options\",children:questions[currentQuestion].options.map(function(option,index){return/*#__PURE__*/_jsx(\"div\",{className:\"option\",onClick:function onClick(){return handleOptionClick(option);},children:option},index);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"timer\",children:[\"Time Remaining: \",timer,\" seconds\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:checkAnswer,children:\"Check Answer\"}),/*#__PURE__*/_jsx(\"button\",{onClick:moveToNextQuestion,children:currentQuestion===questions.length-1?'Finish Quiz':'Next Question'})]});};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Quiz App\"}),quizCompleted?/*#__PURE__*/_jsxs(\"div\",{className:\"result\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Quiz Completed!\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Your Score: \",score,\" / \",questions.length]})]}):renderQuiz()]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","quizData","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","_useState","questions","currentQuestion","userSelections","score","quizCompleted","timer","_useState2","_slicedToArray","state","setState","prevState","_objectSpread","handleOptionClick","selectedOption","concat","_toConsumableArray","checkAnswer","currentQuestionData","selectedAnswer","correctAnswer","moveToNextQuestion","length","renderQuiz","children","className","style","opacity","question","options","map","option","index","onClick"],"sources":["I:/Project/quiz/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport quizData from './quizData'; // Import the quiz data from the separate file\n\nfunction App() {\n  const [state, setState] = useState({\n    questions: [],\n    currentQuestion: 0,\n    userSelections: [],\n    score: 0,\n    quizCompleted: false,\n    timer: 30,\n  });\n\n  const { questions, currentQuestion, userSelections, score, quizCompleted, timer } = state;\n\n  useEffect(() => {\n    setState((prevState) => ({ ...prevState, questions: quizData }));\n  }, []);\n\n  const handleOptionClick = (selectedOption) => {\n    setState((prevState) => ({\n      ...prevState,\n      userSelections: [...prevState.userSelections, selectedOption],\n    }));\n  };\n\n  const checkAnswer = () => {\n    const currentQuestionData = questions[currentQuestion];\n    const selectedAnswer = userSelections[currentQuestion];\n    if (selectedAnswer === currentQuestionData.correctAnswer) {\n      setState((prevState) => ({ ...prevState, score: prevState.score + 1 }));\n    }\n  };\n\n  const moveToNextQuestion = () => {\n    if (currentQuestion < questions.length - 1) {\n      setState((prevState) => ({\n        ...prevState,\n        currentQuestion: prevState.currentQuestion + 1,\n        timer: 30,\n        userSelections: [],\n      }));\n    } else {\n      setState((prevState) => ({ ...prevState, quizCompleted: true }));\n    }\n  };\n\n  const renderQuiz = () => (\n    <>\n      <div className=\"question\" style={{ opacity: currentQuestion === questions.length ? 0 : 1 }}>\n        <p>{questions[currentQuestion].question}</p>\n      </div>\n      <div className=\"options\">\n        {questions[currentQuestion].options.map((option, index) => (\n          <div key={index} className=\"option\" onClick={() => handleOptionClick(option)}>\n            {option}\n          </div>\n        ))}\n      </div>\n      <div className=\"timer\">Time Remaining: {timer} seconds</div>\n      <button onClick={checkAnswer}>Check Answer</button>\n      <button onClick={moveToNextQuestion}>\n        {currentQuestion === questions.length - 1 ? 'Finish Quiz' : 'Next Question'}\n      </button>\n    </>\n  );\n\n  return (\n    <div className=\"App\">\n      <h1>Quiz App</h1>\n      {quizCompleted ? (\n        <div className=\"result\">\n          <h2>Quiz Completed!</h2>\n          <p>Your Score: {score} / {questions.length}</p>\n        </div>\n      ) : renderQuiz()}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}