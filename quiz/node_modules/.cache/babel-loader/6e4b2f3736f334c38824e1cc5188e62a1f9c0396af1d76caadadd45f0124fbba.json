{"ast":null,"code":"var _jsxFileName = \"I:\\\\Project\\\\quiz\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport quizData from './quizData'; // Import the quiz data from the separate file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [userSelections, setUserSelections] = useState([]);\n  const [score, setScore] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [timer, setTimer] = useState(30); // Timer in seconds\n\n  useEffect(() => {\n    // Set the quiz data from the imported file\n    setQuestions(quizData);\n  }, []);\n\n  // Function to start the timer\n  useEffect(() => {\n    if (currentQuestion < questions.length && !quizCompleted) {\n      const timerInterval = setInterval(() => {\n        if (timer > 0) {\n          setTimer(timer - 1);\n        } else {\n          // Time's up, handle this event (e.g., move to the next question or show an alert)\n          clearInterval(timerInterval);\n        }\n      }, 1000); // Decrease timer every second\n\n      // Clear the timer when the component unmounts (e.g., when the quiz is completed)\n      return () => clearInterval(timerInterval);\n    }\n  }, [currentQuestion, timer, questions.length, quizCompleted]);\n  const handleOptionClick = selectedOption => {\n    setUserSelections([...userSelections, selectedOption]);\n  };\n  const checkAnswer = () => {\n    const currentQuestionData = questions[currentQuestion];\n    const selectedAnswer = userSelections[currentQuestion];\n    if (selectedAnswer === currentQuestionData.correctAnswer) {\n      setScore(score + 1);\n    }\n  };\n  const moveToNextQuestion = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setTimer(30); // Reset the timer for each new question\n      setUserSelections([]); // Clear user selections for the next question\n    } else {\n      setQuizCompleted(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), quizCompleted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Score: \", score, \" / \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        style: {\n          opacity: currentQuestion === questions.length ? 0 : 1\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: questions[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          onClick: () => handleOptionClick(option),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [\"Time Remaining: \", timer, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkAnswer,\n        children: \"Check Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: moveToNextQuestion,\n        children: currentQuestion === questions.length - 1 ? 'Finish Quiz' : 'Next Question'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+CPS4wulwFT1kTobw43B7VmVo9k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","quizData","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","questions","setQuestions","currentQuestion","setCurrentQuestion","userSelections","setUserSelections","score","setScore","quizCompleted","setQuizCompleted","timer","setTimer","length","timerInterval","setInterval","clearInterval","handleOptionClick","selectedOption","checkAnswer","currentQuestionData","selectedAnswer","correctAnswer","moveToNextQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","opacity","question","options","map","option","index","onClick","_c","$RefreshReg$"],"sources":["I:/Project/quiz/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport quizData from './quizData'; // Import the quiz data from the separate file\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [userSelections, setUserSelections] = useState([]);\n  const [score, setScore] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [timer, setTimer] = useState(30); // Timer in seconds\n\n  useEffect(() => {\n    // Set the quiz data from the imported file\n    setQuestions(quizData);\n  }, []);\n\n  // Function to start the timer\n  useEffect(() => {\n    if (currentQuestion < questions.length && !quizCompleted) {\n      const timerInterval = setInterval(() => {\n        if (timer > 0) {\n          setTimer(timer - 1);\n        } else {\n          // Time's up, handle this event (e.g., move to the next question or show an alert)\n          clearInterval(timerInterval);\n        }\n      }, 1000); // Decrease timer every second\n\n      // Clear the timer when the component unmounts (e.g., when the quiz is completed)\n      return () => clearInterval(timerInterval);\n    }\n  }, [currentQuestion, timer, questions.length, quizCompleted]);\n\n  const handleOptionClick = (selectedOption) => {\n    setUserSelections([...userSelections, selectedOption]);\n  };\n\n  const checkAnswer = () => {\n    const currentQuestionData = questions[currentQuestion];\n    const selectedAnswer = userSelections[currentQuestion];\n\n    if (selectedAnswer === currentQuestionData.correctAnswer) {\n      setScore(score + 1);\n    }\n  };\n\n  const moveToNextQuestion = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setTimer(30); // Reset the timer for each new question\n      setUserSelections([]); // Clear user selections for the next question\n    } else {\n      setQuizCompleted(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Quiz App</h1>\n      {quizCompleted ? (\n        <div className=\"result\">\n          <h2>Quiz Completed!</h2>\n          <p>Your Score: {score} / {questions.length}</p>\n        </div>\n      ) : (\n        <>\n          <div className=\"question\" style={{ opacity: currentQuestion === questions.length ? 0 : 1 }}>\n            <p>{questions[currentQuestion].question}</p>\n          </div>\n          <div className=\"options\">\n            {questions[currentQuestion].options.map((option, index) => (\n              <div\n                key={index}\n                className=\"option\"\n                onClick={() => handleOptionClick(option)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n          <div className=\"timer\">Time Remaining: {timer} seconds</div>\n          <button onClick={checkAnswer}>Check Answer</button>\n          <button onClick={moveToNextQuestion}>\n            {currentQuestion === questions.length - 1 ? 'Finish Quiz' : 'Next Question'}\n          </button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}