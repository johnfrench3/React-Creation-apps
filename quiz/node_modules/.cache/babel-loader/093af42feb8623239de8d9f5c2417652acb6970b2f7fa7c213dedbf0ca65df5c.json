{"ast":null,"code":"var _jsxFileName = \"I:\\\\Project\\\\quiz\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport quizData from './quizData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [state, setState] = useState({\n    questions: [],\n    currentQuestion: 0,\n    userSelections: [],\n    score: 0,\n    quizCompleted: false,\n    timer: 30\n  });\n  const {\n    questions,\n    currentQuestion,\n    userSelections,\n    score,\n    quizCompleted,\n    timer\n  } = state;\n  useEffect(() => {\n    // Fetch quiz data\n    const fetchQuizData = async () => {\n      try {\n        const response = await fetch(quizData);\n        const data = await response.json();\n        setState(prevState => ({\n          ...prevState,\n          questions: data\n        }));\n      } catch (error) {\n        console.error('Error loading quiz data:', error);\n        // Handle the error, e.g., show an error message to the user\n      }\n    };\n\n    fetchQuizData();\n  }, []);\n  useEffect(() => {\n    // Timer logic\n    let timerInterval;\n    if (currentQuestion < questions.length && !quizCompleted) {\n      timerInterval = setInterval(() => {\n        if (timer > 0) {\n          setState(prevState => ({\n            ...prevState,\n            timer: prevState.timer - 1\n          }));\n        } else {\n          clearInterval(timerInterval);\n          // Handle time's up, e.g., move to the next question or show an alert\n        }\n      }, 1000);\n    }\n    return () => clearInterval(timerInterval);\n  }, [currentQuestion, timer, questions.length, quizCompleted]);\n  const handleOptionClick = selectedOption => {\n    setState(prevState => ({\n      ...prevState,\n      userSelections: [...prevState.userSelections, selectedOption]\n    }));\n  };\n  const checkAnswer = () => {\n    const currentQuestionData = questions[currentQuestion];\n    const selectedAnswer = userSelections[currentQuestion];\n    if (selectedAnswer === currentQuestionData.correctAnswer) {\n      setState(prevState => ({\n        ...prevState,\n        score: prevState.score + 1\n      }));\n    }\n  };\n  const moveToNextQuestion = () => {\n    if (currentQuestion < questions.length - 1) {\n      setState(prevState => ({\n        ...prevState,\n        currentQuestion: prevState.currentQuestion + 1,\n        timer: 30,\n        userSelections: []\n      }));\n    } else {\n      setState(prevState => ({\n        ...prevState,\n        quizCompleted: true\n      }));\n    }\n  };\n  const renderQuiz = () => {\n    if (questions.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading quiz data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        style: {\n          opacity: currentQuestion === questions.length ? 0 : 1\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: questions[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          onClick: () => handleOptionClick(option),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [\"Time Remaining: \", timer, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkAnswer,\n        children: \"Check Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: moveToNextQuestion,\n        children: currentQuestion === questions.length - 1 ? 'Finish Quiz' : 'Next Question'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), quizCompleted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Score: \", score, \" / \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this) : renderQuiz()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6s02w8r96LHbRp8vGUc+E4oq3YE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","quizData","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","state","setState","questions","currentQuestion","userSelections","score","quizCompleted","timer","fetchQuizData","response","fetch","data","json","prevState","error","console","timerInterval","length","setInterval","clearInterval","handleOptionClick","selectedOption","checkAnswer","currentQuestionData","selectedAnswer","correctAnswer","moveToNextQuestion","renderQuiz","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","opacity","question","options","map","option","index","onClick","_c","$RefreshReg$"],"sources":["I:/Project/quiz/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport quizData from './quizData';\n\nfunction App() {\n  const [state, setState] = useState({\n    questions: [],\n    currentQuestion: 0,\n    userSelections: [],\n    score: 0,\n    quizCompleted: false,\n    timer: 30,\n  });\n\n  const { questions, currentQuestion, userSelections, score, quizCompleted, timer } = state;\n\n  useEffect(() => {\n    // Fetch quiz data\n    const fetchQuizData = async () => {\n      try {\n        const response = await fetch(quizData);\n        const data = await response.json();\n        setState((prevState) => ({ ...prevState, questions: data }));\n      } catch (error) {\n        console.error('Error loading quiz data:', error);\n        // Handle the error, e.g., show an error message to the user\n      }\n    };\n\n    fetchQuizData();\n  }, []);\n\n  useEffect(() => {\n    // Timer logic\n    let timerInterval;\n\n    if (currentQuestion < questions.length && !quizCompleted) {\n      timerInterval = setInterval(() => {\n        if (timer > 0) {\n          setState((prevState) => ({ ...prevState, timer: prevState.timer - 1 }));\n        } else {\n          clearInterval(timerInterval);\n          // Handle time's up, e.g., move to the next question or show an alert\n        }\n      }, 1000);\n    }\n\n    return () => clearInterval(timerInterval);\n  }, [currentQuestion, timer, questions.length, quizCompleted]);\n\n  const handleOptionClick = (selectedOption) => {\n    setState((prevState) => ({\n      ...prevState,\n      userSelections: [...prevState.userSelections, selectedOption],\n    }));\n  };\n\n  const checkAnswer = () => {\n    const currentQuestionData = questions[currentQuestion];\n    const selectedAnswer = userSelections[currentQuestion];\n    if (selectedAnswer === currentQuestionData.correctAnswer) {\n      setState((prevState) => ({ ...prevState, score: prevState.score + 1 }));\n    }\n  };\n\n  const moveToNextQuestion = () => {\n    if (currentQuestion < questions.length - 1) {\n      setState((prevState) => ({\n        ...prevState,\n        currentQuestion: prevState.currentQuestion + 1,\n        timer: 30,\n        userSelections: [],\n      }));\n    } else {\n      setState((prevState) => ({ ...prevState, quizCompleted: true }));\n    }\n  };\n\n  const renderQuiz = () => {\n    if (questions.length === 0) {\n      return <p>Loading quiz data...</p>;\n    }\n\n    return (\n      <>\n        <div className=\"question\" style={{ opacity: currentQuestion === questions.length ? 0 : 1 }}>\n          <p>{questions[currentQuestion].question}</p>\n        </div>\n        <div className=\"options\">\n          {questions[currentQuestion].options.map((option, index) => (\n            <div key={index} className=\"option\" onClick={() => handleOptionClick(option)}>\n              {option}\n            </div>\n          ))}\n        </div>\n        <div className=\"timer\">Time Remaining: {timer} seconds</div>\n        <button onClick={checkAnswer}>Check Answer</button>\n        <button onClick={moveToNextQuestion}>\n          {currentQuestion === questions.length - 1 ? 'Finish Quiz' : 'Next Question'}\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Quiz App</h1>\n      {quizCompleted ? (\n        <div className=\"result\">\n          <h2>Quiz Completed!</h2>\n          <p>Your Score: {score} / {questions.length}</p>\n        </div>\n      ) : (\n        renderQuiz()\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}