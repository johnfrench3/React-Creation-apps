{"ast":null,"code":"var _jsxFileName = \"I:\\\\Project\\\\quiz\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [state, setState] = useState({\n    questions: [{\n      question: \"What is the capital of France?\",\n      options: [\"London\", \"Madrid\", \"Paris\", \"Berlin\"],\n      correctAnswer: \"Paris\"\n    }, {\n      question: \"Which planet is known as the Red Planet?\",\n      options: [\"Earth\", \"Mars\", \"Venus\", \"Jupiter\"],\n      correctAnswer: \"Mars\"\n    }\n    // Add more questions here\n    ],\n\n    currentQuestion: 0,\n    userSelections: [],\n    score: 0,\n    quizCompleted: false,\n    timer: 30\n  });\n  const {\n    questions,\n    currentQuestion,\n    userSelections,\n    score,\n    quizCompleted,\n    timer\n  } = state;\n  useEffect(() => {\n    // Your code for setting up the timer\n    // ...\n\n    // Fetch quiz data or perform other setup as needed\n    // ...\n  }, []);\n  const handleOptionClick = selectedOption => {\n    setState(prevState => ({\n      ...prevState,\n      userSelections: [...prevState.userSelections, selectedOption]\n    }));\n  };\n  const checkAnswer = () => {\n    const currentQuestionData = questions[currentQuestion];\n    const selectedAnswer = userSelections[currentQuestion];\n    if (selectedAnswer === currentQuestionData.correctAnswer) {\n      setState(prevState => ({\n        ...prevState,\n        score: prevState.score + 1\n      }));\n    }\n  };\n  const moveToNextQuestion = () => {\n    if (currentQuestion < questions.length - 1) {\n      setState(prevState => ({\n        ...prevState,\n        currentQuestion: prevState.currentQuestion + 1,\n        timer: 30,\n        userSelections: []\n      }));\n    } else {\n      setState(prevState => ({\n        ...prevState,\n        quizCompleted: true\n      }));\n    }\n  };\n  const renderQuiz = () => {\n    if (currentQuestion < questions.length) {\n      const currentQuestionData = questions[currentQuestion];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: currentQuestionData.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: currentQuestionData.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option\",\n            onClick: () => handleOptionClick(option),\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: [\"Time Remaining: \", timer, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: checkAnswer,\n          children: \"Check Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: moveToNextQuestion,\n          children: currentQuestion === questions.length - 1 ? 'Finish Quiz' : 'Next Question'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Quiz Completed!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your Score: \", score, \" / \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), renderQuiz()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QwUckKUBPaLTBlL/EmdYDGvmZMU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","state","setState","questions","question","options","correctAnswer","currentQuestion","userSelections","score","quizCompleted","timer","handleOptionClick","selectedOption","prevState","checkAnswer","currentQuestionData","selectedAnswer","moveToNextQuestion","length","renderQuiz","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","onClick","_c","$RefreshReg$"],"sources":["I:/Project/quiz/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [state, setState] = useState({\n    questions: [\n      {\n        question: \"What is the capital of France?\",\n        options: [\"London\", \"Madrid\", \"Paris\", \"Berlin\"],\n        correctAnswer: \"Paris\",\n      },\n      {\n        question: \"Which planet is known as the Red Planet?\",\n        options: [\"Earth\", \"Mars\", \"Venus\", \"Jupiter\"],\n        correctAnswer: \"Mars\",\n      },\n      // Add more questions here\n    ],\n    currentQuestion: 0,\n    userSelections: [],\n    score: 0,\n    quizCompleted: false,\n    timer: 30,\n  });\n\n  const { questions, currentQuestion, userSelections, score, quizCompleted, timer } = state;\n\n  useEffect(() => {\n    // Your code for setting up the timer\n    // ...\n\n    // Fetch quiz data or perform other setup as needed\n    // ...\n  }, []);\n\n  const handleOptionClick = (selectedOption) => {\n    setState((prevState) => ({\n      ...prevState,\n      userSelections: [...prevState.userSelections, selectedOption],\n    }));\n  };\n\n  const checkAnswer = () => {\n    const currentQuestionData = questions[currentQuestion];\n    const selectedAnswer = userSelections[currentQuestion];\n    if (selectedAnswer === currentQuestionData.correctAnswer) {\n      setState((prevState) => ({ ...prevState, score: prevState.score + 1 }));\n    }\n  };\n\n  const moveToNextQuestion = () => {\n    if (currentQuestion < questions.length - 1) {\n      setState((prevState) => ({\n        ...prevState,\n        currentQuestion: prevState.currentQuestion + 1,\n        timer: 30,\n        userSelections: [],\n      }));\n    } else {\n      setState((prevState) => ({ ...prevState, quizCompleted: true }));\n    }\n  };\n\n  const renderQuiz = () => {\n    if (currentQuestion < questions.length) {\n      const currentQuestionData = questions[currentQuestion];\n      return (\n        <div className=\"question\">\n          <p>{currentQuestionData.question}</p>\n          <div className=\"options\">\n            {currentQuestionData.options.map((option, index) => (\n              <div key={index} className=\"option\" onClick={() => handleOptionClick(option)}>\n                {option}\n              </div>\n            ))}\n          </div>\n          <div className=\"timer\">Time Remaining: {timer} seconds</div>\n          <button onClick={checkAnswer}>Check Answer</button>\n          <button onClick={moveToNextQuestion}>\n            {currentQuestion === questions.length - 1 ? 'Finish Quiz' : 'Next Question'}\n          </button>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"result\">\n          <h2>Quiz Completed!</h2>\n          <p>Your Score: {score} / {questions.length}</p>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Quiz App</h1>\n      {renderQuiz()}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}