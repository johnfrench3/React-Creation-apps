{"ast":null,"code":"var _jsxFileName = \"I:\\\\Project\\\\quiz\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [questions, setQuestions] = useState([{\n    question: 'What is the capital of France?',\n    options: ['London', 'Berlin', 'Paris', 'Madrid'],\n    correctAnswer: 'Paris'\n  }, {\n    question: 'Which planet is known as the Red Planet?',\n    options: ['Mars', 'Jupiter', 'Earth', 'Venus'],\n    correctAnswer: 'Mars'\n  }]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [userSelections, setUserSelections] = useState([]);\n  const [score, setScore] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [timer, setTimer] = useState(30);\n  useEffect(() => {\n    const timerInterval = setInterval(() => {\n      if (timer > 0) {\n        setTimer(timer - 1);\n      } else {\n        moveToNextQuestion();\n        clearInterval(timerInterval);\n      }\n    }, 1000);\n    return () => clearInterval(timerInterval);\n  }, [timer]);\n  const handleOptionClick = selectedOption => {\n    setUserSelections([...userSelections, selectedOption]);\n  };\n  const checkAnswer = () => {\n    const currentQuestionData = questions[currentQuestion];\n    const selectedAnswer = userSelections[currentQuestion];\n    if (selectedAnswer === currentQuestionData.correctAnswer) {\n      setScore(score + 1);\n    }\n  };\n  const moveToNextQuestion = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setTimer(30);\n      setUserSelections([]);\n    } else {\n      setQuizCompleted(true);\n    }\n  };\n  const renderQuiz = () => {\n    if (currentQuestion < questions.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: questions[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option\",\n            onClick: () => handleOptionClick(option),\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: [\"Time Remaining: \", timer, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: checkAnswer,\n          children: \"Check Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: moveToNextQuestion,\n          children: currentQuestion === questions.length - 1 ? 'Finish Quiz' : 'Next Question'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Quiz Completed!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your Score: \", score, \" / \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), quizCompleted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: renderQuiz()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 24\n    }, this) : renderQuiz()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"p1ik9CObaxg1pTSP6J3SmOvP1I4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","question","options","correctAnswer","currentQuestion","setCurrentQuestion","userSelections","setUserSelections","score","setScore","quizCompleted","setQuizCompleted","timer","setTimer","timerInterval","setInterval","moveToNextQuestion","clearInterval","handleOptionClick","selectedOption","checkAnswer","currentQuestionData","selectedAnswer","length","renderQuiz","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","onClick","_c","$RefreshReg$"],"sources":["I:/Project/quiz/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [questions, setQuestions] = useState([\n    {\n      question: 'What is the capital of France?',\n      options: ['London', 'Berlin', 'Paris', 'Madrid'],\n      correctAnswer: 'Paris',\n    },\n    {\n      question: 'Which planet is known as the Red Planet?',\n      options: ['Mars', 'Jupiter', 'Earth', 'Venus'],\n      correctAnswer: 'Mars',\n    },\n  ]);\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [userSelections, setUserSelections] = useState([]);\n  const [score, setScore] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [timer, setTimer] = useState(30);\n\n  useEffect(() => {\n    const timerInterval = setInterval(() => {\n      if (timer > 0) {\n        setTimer(timer - 1);\n      } else {\n        moveToNextQuestion();\n        clearInterval(timerInterval);\n      }\n    }, 1000);\n\n    return () => clearInterval(timerInterval);\n  }, [timer]);\n\n  const handleOptionClick = (selectedOption) => {\n    setUserSelections([...userSelections, selectedOption]);\n  };\n\n  const checkAnswer = () => {\n    const currentQuestionData = questions[currentQuestion];\n    const selectedAnswer = userSelections[currentQuestion];\n\n    if (selectedAnswer === currentQuestionData.correctAnswer) {\n      setScore(score + 1);\n    }\n  };\n\n  const moveToNextQuestion = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setTimer(30);\n      setUserSelections([]);\n    } else {\n      setQuizCompleted(true);\n    }\n  };\n\n  const renderQuiz = () => {\n    if (currentQuestion < questions.length) {\n      return (\n        <div className=\"question\">\n          <p>{questions[currentQuestion].question}</p>\n          <div className=\"options\">\n            {questions[currentQuestion].options.map((option, index) => (\n              <div\n                key={index}\n                className=\"option\"\n                onClick={() => handleOptionClick(option)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n          <div className=\"timer\">Time Remaining: {timer} seconds</div>\n          <button onClick={checkAnswer}>Check Answer</button>\n          <button onClick={moveToNextQuestion}>\n            {currentQuestion === questions.length - 1\n              ? 'Finish Quiz'\n              : 'Next Question'}\n          </button>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"result\">\n          <h2>Quiz Completed!</h2>\n          <p>Your Score: {score} / {questions.length}</p>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Quiz App</h1>\n      {quizCompleted ? <div className=\"result\">{renderQuiz()}</div> : renderQuiz()}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}